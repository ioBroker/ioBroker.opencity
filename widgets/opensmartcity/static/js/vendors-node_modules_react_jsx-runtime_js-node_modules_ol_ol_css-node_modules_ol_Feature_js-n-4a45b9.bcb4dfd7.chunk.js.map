{"version":3,"file":"static/js/vendors-node_modules_react_jsx-runtime_js-node_modules_ol_ol_css-node_modules_ol_Feature_js-n-4a45b9.bcb4dfd7.chunk.js","mappings":"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","sources":["../node_modules/color-name/index.js","../node_modules/rbush/rbush.min.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/ol/color.js","../node_modules/color-rgba/index.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/canvas.js","../node_modules/ol/render/canvas/ZIndexContext.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/Source.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/render/Feature.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: ['coalesce',['get','propertynanme'],'default value']]\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise (WebGL only).\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise (WebGL only).\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    const context = this.getRenderContext(frameState);\n    const canvas = this.context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Array<Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = [];\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          replay.execute(\n            context,\n            scaledCanvasSize,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree,\n          );\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const z = zs[i];\n            if (!this.deferredZIndexContexts_[z]) {\n              this.deferredZIndexContexts_[z] = [];\n            }\n            this.deferredZIndexContexts_[z].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    this.deferredZIndexContexts_.forEach((zIndexContexts) => {\n      zIndexContexts.forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n    });\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const declutter = this.getLayer().getDeclutter();\n    if (!declutter) {\n      return;\n    }\n    this.setupCompositionContext_(); //FIXME Check if this works, or if we need to defer something.\n    this.renderWorlds(this.replayGroup_, frameState, true);\n    this.releaseCompositionContext_();\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    this.replayGroup_.renderDeferred();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(CanvasRenderingContext2D.prototype, {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; i += 2) {\n        const property = instructionsAtIndex[i];\n        const instructionAtIndex = instructionsAtIndex[i + 1];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n      const srcWidth = getWidth(src.extent) * stitchScale;\n      const srcHeight = getHeight(src.extent) * stitchScale;\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_,\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml',\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source),\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_),\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.0.0';\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","require","k","Symbol","for","Object","hasOwnProperty","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","ref","__self","__source","q","g","b","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","Property","CollectionEvent","Event","constructor","element","index","super","Collection","BaseObject","array","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","extend","arr","forEach","getArray","item","get","insertAt","elem","Error","dispatchEvent","CollectionEventType","ADD","removeAt","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","unlistenByKey","listen","EventType","CHANGE","obj","styles","Array","isArray","assert","createStyleFunction","setId","id","name","removeChangeListener","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","LOAD","src","IMAGE_DECODE","decode","then","catch","error","ERROR","decodeFallback","Promise","resolve","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","IDLE","LOADING","LOADED","EMPTY","ImageTile","Tile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","TileState","unlistenImage_","handleImageError_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","some","hasFeatureAtCoordinate","TRUE","getMap","renderFrame","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","fontChangeListenerKey_","checkedFonts","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","RenderEvent","parentNode","removeChild","display","RenderEventType","PRECOMPOSE","BaseVectorLayer","getDeclutter","declutter","renderedLayerStates","previousElement","layerIndex","sourceState","getSourceState","unrender","render","replaceChildren","POSTCOMPOSE","renderDeclutter","renderDeferred","GroupEvent","LayerGroup","BaseLayer","baseOptions","assign","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","getIntersection","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","removeNode","setMap","getOverlayContainerStopEvent","appendChild","VOID","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","clamp","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","rotate","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","getProjection","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","CompositeMapRenderer","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","equalsExtent","createOrUpdateEmpty","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","ObjectEvent","oldValue","Observable","values_","getKeys","keys","getPropertiesInternal","notify","concat","listener","silent","applyProperties","unset","EventTarget","onInternal","onceInternal","unInternal","revision_","getRevision","len","ol_key","unByKey","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","easeIn","inTransition","endTransition","TileRange","containsXY","containsTileRange","tileRange","getHeight","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","degrees","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","currentResolution","w","getCenter","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","arg","_u","_v","xn","yn","zn","luv","vn","yr","lchuv","hr","cstr","space","parts","alpha","toLowerCase","names","base","parseInt","exec","dims","replace","trim","split","shift","baseHues","endsWith","test","_cstr$match","match","join","red","orange","yellow","green","blue","purple","hsl","t1","t2","t3","val","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","parse","parseRgba","normalize","asArray","round","isStringColor","_","asColorLike","pattern","iconCache","getPattern","cacheKey","canvasPattern","iconImage","getImageState","ImageState","patternCanvasContext","drawImage","getIconImage","asCanvasPattern","levels","info","level","console","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","canvasPool","settings","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","childNodes","oldChild","newChild","originalListener","eventsKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","Point","SimpleGeometry","layout","point","closestPointXY","closestPoint","minSquaredDistance","squaredDistance","squaredDx","getCoordinates","computeExtent","intersectsExtent","setLayout","deflateCoordinate","assignClosest","offset1","offset2","lerp","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","linearRing","twiceArea","linearRings","LinearRing","maxDeltaRevision_","setFlatCoordinates","linearRingArea","inflateCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","deflateCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","linearRingsContainsXY","getOrientedFlatCoordinates","linearRingsArea","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","simplifyTransformed","coord","getClosestPoint","intersectsCoordinate","sx","sy","simplify","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getTransform","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","nesting","getLayoutForStride","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","intersectsLinearRing","linearRingIsClockwise","edge","isClockwise","reverseCoordinates","inflateEnds","startOrientation","prevEndIndex","orientation","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","ua","navigator","userAgent","devicePixelRatio","WorkerGlobalScope","self","background_","background","LayerProperty","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getZIndex","getOpacity","getVisible","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","featureId","geometryType","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","createParser","_ref","getTypeFromHint","withArgsCount","_ref2","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","input","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","plural","range","argType","expression","gotType","expectedType","sameType","returnType","_len2","argValidators","_key2","actualType","computeGeometryType","substring","getGeometries","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","declutterMode","optionalDeclutterMode","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","radiusName","points","requireNumber","radius","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSize","requireSizeLike","toSize","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getFeatures","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","createDefaultStyle","toStyleLike","toStyleFunction","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getData","isVisible","getMapInternal","find","layerExtent","prepareFrame","MAP","arrayLayerState","createRenderer","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","getLayer","tileState","getTile","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","loadedTileCallback","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","getRenderContext","inversePixelTransform","tempTransform","containerReused","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alphaChanged","globalAlpha","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","fillPatternScale","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p1","p2","p3","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","font","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","ZIndexContext","getZIndexContext","createLabel","textIsArray","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","targetContext","builderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","zIndexContexts","draw","userTransform","context_","transform_","transformRotation_","toFixed","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","imageState","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","compositionContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","renderDeferredInternal","makeScale","transformToString","PRERENDER","POSTRENDER","clipped","transforms","styleFunction","userExtent","CanvasImmediateRenderer","getTransformFromProjections","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","getSquaredRenderTolerance","resultFeatures","hitDetect","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","toUserResolution","dirty","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","VectorLayer","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","code_","code","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","cosh","PROJECTIONS","fromEPSG4326","dimension","toEPSG4326","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","measureFont","measureContext","textHeights","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","_this","_defineProperty","instructions_","offset_","Proxy","CanvasRenderingContext2D","pushMethodArgs_","instructionsAtIndex","instructionAtIndex","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","forEachLoadedTile","loadImage","pixelContext","deferredContext_","pixelContext_","err","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","drawSingle","clipExtent","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","LRUCache","pruneExceptNewestZ","fromKey","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","DEFAULT_MAX_ZOOM","half","TileSource","Source","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","TileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","refresh","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","interpolatePoint","cumulativeLengths","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","linearRingssCenter","midpoint","_this$ends_","enableSimplifyTransformed","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","CircleStyle","displacement","getRadius","getDisplacement","radius_","patternImage_","color_","patternImage","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","HTMLImageElement","iconImage_","offsetOrigin_","size_","initialOptions_","unlistenImageChange","listenImageChange","getSrc","iconImageSize","taintedTestContext","IconImage","imageState_","tainted_","ready_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","onChange","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","getCacheKey","createPattern","maxCacheSize","shared","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","_geometry","_this$getRenderer","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","create","setFromArray","transform1","transform2","compose","det","matrixPrecision","uidCounter_","ol_uid"],"sourceRoot":""}