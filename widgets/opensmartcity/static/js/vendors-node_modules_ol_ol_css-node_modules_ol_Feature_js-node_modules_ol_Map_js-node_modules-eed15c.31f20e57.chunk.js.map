{"version":3,"file":"static/js/vendors-node_modules_ol_ol_css-node_modules_ol_Feature_js-node_modules_ol_Map_js-node_modules-eed15c.31f20e57.chunk.js","mappings":"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","sources":["../node_modules/color-name/index.js","../node_modules/rbush/rbush.min.js","../node_modules/ol/Collection.js","../node_modules/ol/CollectionEventType.js","../node_modules/ol/Disposable.js","../node_modules/ol/Feature.js","../node_modules/ol/Image.js","../node_modules/ol/ImageState.js","../node_modules/ol/ImageTile.js","../node_modules/ol/renderer/Map.js","../node_modules/ol/renderer/Composite.js","../node_modules/ol/layer/Group.js","../node_modules/ol/MapEvent.js","../node_modules/ol/MapBrowserEvent.js","../node_modules/ol/MapBrowserEventType.js","../node_modules/ol/pointer/EventType.js","../node_modules/ol/MapBrowserEventHandler.js","../node_modules/ol/MapEventType.js","../node_modules/ol/MapProperty.js","../node_modules/ol/structs/PriorityQueue.js","../node_modules/ol/TileQueue.js","../node_modules/ol/control/Control.js","../node_modules/ol/control/Attribution.js","../node_modules/ol/control/Rotate.js","../node_modules/ol/control/Zoom.js","../node_modules/ol/interaction/Property.js","../node_modules/ol/interaction/Interaction.js","../node_modules/ol/interaction/DoubleClickZoom.js","../node_modules/ol/interaction/Pointer.js","../node_modules/ol/events/condition.js","../node_modules/ol/interaction/DragPan.js","../node_modules/ol/interaction/DragRotate.js","../node_modules/ol/render/Box.js","../node_modules/ol/interaction/DragBox.js","../node_modules/ol/interaction/DragZoom.js","../node_modules/ol/events/Key.js","../node_modules/ol/interaction/KeyboardPan.js","../node_modules/ol/interaction/KeyboardZoom.js","../node_modules/ol/Kinetic.js","../node_modules/ol/interaction/MouseWheelZoom.js","../node_modules/ol/interaction/PinchRotate.js","../node_modules/ol/interaction/PinchZoom.js","../node_modules/ol/Map.js","../node_modules/ol/control/defaults.js","../node_modules/ol/interaction/defaults.js","../node_modules/ol/Object.js","../node_modules/ol/ObjectEventType.js","../node_modules/ol/Observable.js","../node_modules/ol/Tile.js","../node_modules/ol/TileRange.js","../node_modules/ol/TileState.js","../node_modules/ol/ViewProperty.js","../node_modules/ol/centerconstraint.js","../node_modules/ol/resolutionconstraint.js","../node_modules/ol/View.js","../node_modules/ol/ViewHint.js","../node_modules/ol/array.js","../node_modules/ol/asserts.js","../node_modules/color-space/rgb.js","../node_modules/color-space/xyz.js","../node_modules/color-space/luv.js","../node_modules/color-space/lchuv.js","../node_modules/color-parse/index.js","../node_modules/color-space/hsl.js","../node_modules/ol/color.js","../node_modules/color-rgba/index.js","../node_modules/ol/colorlike.js","../node_modules/ol/console.js","../node_modules/ol/coordinate.js","../node_modules/ol/css.js","../node_modules/ol/dom.js","../node_modules/ol/easing.js","../node_modules/ol/events.js","../node_modules/ol/events/Event.js","../node_modules/ol/events/EventType.js","../node_modules/ol/events/Target.js","../node_modules/ol/extent.js","../node_modules/ol/extent/Relationship.js","../node_modules/ol/functions.js","../node_modules/ol/geom/Point.js","../node_modules/ol/geom/flat/closest.js","../node_modules/ol/geom/flat/area.js","../node_modules/ol/geom/LinearRing.js","../node_modules/ol/geom/Polygon.js","../node_modules/ol/geom/Geometry.js","../node_modules/ol/geom/SimpleGeometry.js","../node_modules/ol/geom/flat/contains.js","../node_modules/ol/geom/flat/deflate.js","../node_modules/ol/geom/flat/inflate.js","../node_modules/ol/geom/flat/interiorpoint.js","../node_modules/ol/geom/flat/intersectsextent.js","../node_modules/ol/geom/flat/segments.js","../node_modules/ol/geom/flat/reverse.js","../node_modules/ol/geom/flat/orient.js","../node_modules/ol/geom/flat/simplify.js","../node_modules/ol/geom/flat/transform.js","../node_modules/ol/has.js","../node_modules/ol/layer/Base.js","../node_modules/ol/layer/Layer.js","../node_modules/ol/layer/Property.js","../node_modules/ol/layer/TileProperty.js","../node_modules/ol/layer/BaseTile.js","../node_modules/ol/renderer/canvas/TileLayer.js","../node_modules/ol/layer/Tile.js","../node_modules/ol/expr/expression.js","../node_modules/ol/expr/cpu.js","../node_modules/ol/render/canvas/style.js","../node_modules/ol/layer/BaseVector.js","../node_modules/ol/render/canvas/Instruction.js","../node_modules/ol/render/VectorContext.js","../node_modules/ol/render/canvas/Builder.js","../node_modules/ol/render/canvas/ImageBuilder.js","../node_modules/ol/render/canvas/LineStringBuilder.js","../node_modules/ol/render/canvas/PolygonBuilder.js","../node_modules/ol/geom/flat/linechunk.js","../node_modules/ol/geom/flat/straightchunk.js","../node_modules/ol/render/canvas/TextBuilder.js","../node_modules/ol/render/canvas/BuilderGroup.js","../node_modules/ol/geom/flat/textpath.js","../node_modules/ol/geom/flat/length.js","../node_modules/ol/render/canvas/Executor.js","../node_modules/ol/render/canvas/ExecutorGroup.js","../node_modules/ol/render/canvas/Immediate.js","../node_modules/ol/render/canvas/hitdetect.js","../node_modules/ol/renderer/vector.js","../node_modules/ol/renderer/canvas/VectorLayer.js","../node_modules/ol/layer/Vector.js","../node_modules/ol/math.js","../node_modules/ol/obj.js","../node_modules/ol/proj/Units.js","../node_modules/ol/proj/Projection.js","../node_modules/ol/proj/epsg3857.js","../node_modules/ol/proj/epsg4326.js","../node_modules/ol/proj/projections.js","../node_modules/ol/proj/transforms.js","../node_modules/ol/sphere.js","../node_modules/ol/proj.js","../node_modules/ol/render/Event.js","../node_modules/ol/render/EventType.js","../node_modules/ol/render/canvas.js","../node_modules/ol/renderer/Layer.js","../node_modules/ol/renderer/canvas/Layer.js","../node_modules/ol/reproj/Triangulation.js","../node_modules/ol/reproj.js","../node_modules/ol/reproj/Tile.js","../node_modules/ol/reproj/common.js","../node_modules/ol/rotationconstraint.js","../node_modules/ol/size.js","../node_modules/ol/structs/LRUCache.js","../node_modules/ol/tilecoord.js","../node_modules/ol/TileCache.js","../node_modules/ol/source/TileEventType.js","../node_modules/ol/tilegrid/TileGrid.js","../node_modules/ol/tilegrid.js","../node_modules/ol/source/Tile.js","../node_modules/ol/tileurlfunction.js","../node_modules/ol/source/UrlTile.js","../node_modules/ol/source/TileImage.js","../node_modules/ol/source/XYZ.js","../node_modules/ol/source/OSM.js","../node_modules/ol/source/Source.js","../node_modules/ol/structs/RBush.js","../node_modules/ol/geom/flat/interpolate.js","../node_modules/ol/render/Feature.js","../node_modules/ol/geom/flat/center.js","../node_modules/ol/source/VectorEventType.js","../node_modules/ol/loadingstrategy.js","../node_modules/ol/featureloader.js","../node_modules/ol/source/Vector.js","../node_modules/ol/style/Circle.js","../node_modules/ol/style/Fill.js","../node_modules/ol/style/IconImage.js","../node_modules/ol/style/Icon.js","../node_modules/ol/style/IconImageCache.js","../node_modules/ol/style/Image.js","../node_modules/ol/style/RegularShape.js","../node_modules/ol/style/Stroke.js","../node_modules/ol/style/Style.js","../node_modules/ol/style/Text.js","../node_modules/ol/tilegrid/common.js","../node_modules/ol/transform.js","../node_modules/ol/util.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`'\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(this.getExtent(), requestResolution, this.getPixelRatio())\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e)\n          )\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`'\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue'\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event'\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`'\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`'\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`'\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`'\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`'\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      }\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number'\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.'\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    const canvasWidthInUnits = getWidth(sourceDataExtent);\n    const canvasHeightInUnits = getHeight(sourceDataExtent);\n    stitchContext = createCanvasContext2D(\n      Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n      Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n      canvasPool\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n\n    const stitchScale = pixelRatio / sourceResolution;\n\n    sources.forEach(function (src, i, arr) {\n      const xPos = src.extent[0] - sourceDataExtent[0];\n      const yPos = -(src.extent[3] - sourceDataExtent[3]);\n      const srcWidth = getWidth(src.extent);\n      const srcHeight = getHeight(src.extent);\n\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          xPos * stitchScale,\n          yPos * stitchScale,\n          srcWidth * stitchScale,\n          srcHeight * stitchScale\n        );\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(\n        sourceResolution / pixelRatio,\n        -sourceResolution / pixelRatio\n      );\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache'\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already'\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true\n      ),\n      '`resolutions` must be sorted in descending order'\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal'\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal'\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both'\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.'\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent'\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json') {\n        source = JSON.parse(xhr.responseText);\n      } else if (type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureClass>|Collection<FeatureClass>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureClass>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureClass>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, FeatureClass|Array<RenderFeature>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureClass>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureClass>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureClass>} */\n    let collection;\n    /** @type {Array<FeatureClass>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureClass} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source'\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureClass>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureClass>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureClass>} */\n    const newFeatures = [];\n    /** @type Array<FeatureClass> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureClass>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureClass>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureClass>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureClass): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureClass>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureClass>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureClass):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureClass} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureClass} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClass|Array<RenderFeature>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureClass|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureClass} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureClass} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {FeatureClass} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureClass} feature Feature.\n   * @return {FeatureClass|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureClass} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '8.2.0';\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","CollectionEvent","Event","constructor","type","element","index","super","Collection","BaseObject","array","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","extend","arr","forEach","getArray","item","get","insertAt","elem","Error","dispatchEvent","CollectionEventType","ADD","removeAt","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","unlistenByKey","listen","EventType","CHANGE","obj","styles","Array","isArray","assert","createStyleFunction","setId","id","name","removeChangeListener","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","listenOnce","LOAD","src","IMAGE_DECODE","decode","then","catch","error","ERROR","decodeFallback","Promise","resolve","reject","complete","width","handleLoad","unlisten","handleError","removeEventListener","addEventListener","IDLE","LOADING","LOADED","EMPTY","ImageTile","Tile","tileCoord","state","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","TileState","unlistenImage_","handleImageError_","ctx","createCanvasContext2D","fillStyle","fillRect","canvas","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","bind","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","abstract","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","composeTransform","size","resolution","rotation","center","makeInverse","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","call","projection","translatedCoordinate","wrapX","offsets","canWrapX","projectionExtent","getExtent","worldWidth","getWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","inView","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","b","some","hasFeatureAtCoordinate","TRUE","getMap","renderFrame","flushDeclutterItems","scheduleExpireIconCache","iconImageCache","canExpireCache","postRenderFunctions","expireIconCache","expire","fontChangeListenerKey_","checkedFonts","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","zIndex","className","CLASS_UNSELECTABLE","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","declutterLayers_","hasListener","event","RenderEvent","parentNode","removeChild","display","RenderEventType","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","replaceChildren","POSTCOMPOSE","layers","renderDeclutter","GroupEvent","LayerGroup","BaseLayer","baseOptions","Object","assign","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","getUid","collectionEvent","collection","currentLayers","getLayersArray","getLayerStatesArray","dest","states","pos","ownLayerState","getLayerState","defaultZIndex","opacity","visible","maxResolution","minResolution","minZoom","maxZoom","extent","getIntersection","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","PointerEventType","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","TOUCHMOVE","PASSIVE_EVENT_LISTENERS","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEvent","MapBrowserEventType","clearTimeout","setTimeout","updateActivePointers_","pointerId","target","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","PriorityQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","removeNode","setMap","getOverlayContainerStopEvent","appendChild","VOID","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","handleClick_","cssClasses","CLASS_CONTROL","CLASS_COLLAPSED","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","equals","removeChildren","innerHTML","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","compassClassName","add","callResetNorth_","resetNorth","duration_","duration","autoHide_","autoHide","rotation_","CLASS_HIDDEN","resetNorth_","view","getView","getRotation","PI","animate","easing","easeOut","setRotation","transform","contains","delta","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","getZoom","newZoom","getConstrainedZoom","getAnimating","cancelAnimations","zoom","setZoom","Interaction","handleEvent","setActive","getActive","InteractionProperty","mapBrowserEvent","active","zoomByDelta","anchor","newResolution","getResolutionForZoom","delta_","stopEvent","browserEvent","shiftKey","centroid","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","var_args","conditions","arguments","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","focus","always","mouseActionButton","WEBKIT","MAC","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","PointerInteraction","FALSE","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","beginInteraction","centroidFromPointers","update","scaleCoordinate","getResolution","rotateCoordinate","adjustCenterInternal","begin","end","distance","getDistance","angle","getAngle","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","cos","sin","animateInternal","getConstrainedCenter","endInteraction","lastAngle_","getConstraints","disable","getSize","offset","theta","atan2","adjustRotationInternal","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","setCoordinates","Polygon","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragBox","out_","out","rotatedExtent","rotatedExtentForGeometry","getResolutionForExtentInternal","factor","scale","fitInternal","defaultCondition_","pixelDelta_","pixelDelta","KEYDOWN","keyEvent","Key","mapUnitsDelta","deltaX","deltaY","currentCenter","linear","pan","platformModifierKey","KEYPRESS","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","y","Date","now","lastIndex","firstIndex","dx","dy","totalDelta_","lastDelta_","maxDelta_","maxDelta","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","constrainResolution","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","WHEEL","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DEVICE_PIXEL_RATIO","DOM_DELTA_LINE","getConstrainResolution","adjustZoom","timeLeft","handleWheelZoom_","clamp","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","adjustResolutionInternal","direction","removeLayerMapProperty","Layer","setMapInternal","setLayerMapProperty","Map","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","MapProperty","View","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","createTransform","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","Zoom","zoomOptions","rotate","Rotate","rotateOptions","attribution","Attribution","attributionOptions","defaultControls","Kinetic","altShiftDragRotate","DragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","DragPan","pinchRotate","PinchRotate","pinchZoom","PinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","MouseWheelZoom","shiftDragZoom","DragZoom","defaultInteractions","overlays_","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","TileQueue","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","viewportSize","scaleX","scaleY","eventPosition","changedTouches","getTarget","toUserCoordinate","getProjection","applyTransform","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","fromUserCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","eventType","rootNode","documentElement","interactionsArray","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","time","RENDERCOMPLETE","resolveConstraints","CONTEXTMENU","unobserve","ShadowRoot","host","setSize","CompositeMapRenderer","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","hasArea","isDef","getHints","declutterTree","getForViewAndSize","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","equalsExtent","createOrUpdateEmpty","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","warn","oldSize","setViewportSize","ObjectEvent","oldValue","Observable","values_","hasOwnProperty","getKeys","keys","getPropertiesInternal","notify","concat","listener","silent","applyProperties","unset","EventTarget","onInternal","onceInternal","unInternal","revision_","getRevision","len","ol_key","unByKey","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","easeIn","inTransition","endTransition","TileRange","containsXY","containsTileRange","tileRange","getHeight","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","hints_","animations_","updateAnimationKey_","projection_","createProjection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","fromUserExtent","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","isGlobal","resolutions","capped","z","linearFindNearest","createSnapToResolutions","defaultMaxResolution","METERS_PER_UNIT","degrees","getMetersPerUnit","DEFAULT_TILE_SIZE","defaultMinResolution","power","tolerance","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","rotationNone","createSnapToN","createRotationConstraint","constraints_","setCenterInternal","setResolution","oldPadding","newPadding","offsetX","offsetY","getUpdatedOptions_","newOptions","args","animationCount","animationCallback","series","animation","inAndOut","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","modulo","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","addCoordinate","currentResolution","w","getCenter","calculateExtent","calculateExtentInternal","toUserExtent","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","getType","userProjection","getUserProjection","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","centerRot","centerX","centerY","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustResolution","adjustRotation","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","endInteractionInternal","targetZoom","targetRes","returnValue","coordinatesEqual","binarySearch","haystack","needle","comparator","mid","cmp","ascending","low","high","found","candidate","reverseSubArray","tmp","extension","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assertion","errorMessage","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","luv","vn","yr","lchuv","hr","cstr","space","parts","alpha","toLowerCase","names","base","parseInt","exec","dims","replace","trim","split","shift","baseHues","endsWith","test","_cstr$match","match","join","red","orange","yellow","green","blue","purple","hsl","t1","t2","t3","val","asString","color","MAX_CACHE_SIZE","cache","cacheSize","withAlpha","output","rgbaToLcha","lchaToRgba","fromString","raw","Number","parsed","parse","parseRgba","normalize","asArray","round","isStringColor","_","asColorLike","levels","info","level","console","coordinate1","coordinate2","worldsAway","sourceExtentWidth","getWorldsAway","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","canvasPool","settings","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","newNode","oldNode","parent","replaceChild","node","lastChild","oldChildren","childNodes","oldChild","newChild","originalListener","eventsKey","BLUR","CLEAR","DRAGENTER","DRAGOVER","FOCUS","RESIZE","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","isString","evt","dispatching","pendingRemovals","propagate","pr","getListeners","boundingExtent","createEmpty","extendCoordinate","buffer","closestSquaredDistanceXY","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","transformFn","stops","xs","ys","_boundingExtentXYs","wrapAndSliceX","isFinite","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","arrayEquals","Point","SimpleGeometry","layout","point","closestPointXY","closestPoint","minSquaredDistance","squaredDistance","squaredDx","getCoordinates","computeExtent","intersectsExtent","setLayout","deflateCoordinate","assignClosest","offset1","offset2","lerp","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","isRing","tmpPoint","assignClosestArrayPoint","linearRing","twiceArea","linearRings","LinearRing","maxDeltaRevision_","setFlatCoordinates","linearRingArea","inflateCoordinates","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","douglasPeucker","deflateCoordinates","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","linearRingsContainsXY","getOrientedFlatCoordinates","linearRingsArea","right","orientLinearRings","inflateCoordinatesArray","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","quantizeArray","intersectsLinearRingArray","deflateCoordinatesArray","fromExtent","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","simplifyTransformed","coord","getClosestPoint","intersectsCoordinate","sx","sy","simplify","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","transform2D","getTransform","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","nesting","getLayoutForStride","linearRingContainsExtent","linearRingContainsXY","wn","coordinatess","inflateMultiCoordinatesArray","endss","coordinatesss","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","intersectsLineString","coordinatesExtent","ret","forEachSegment","point1","point2","intersectsLinearRing","linearRingIsClockwise","edge","isClockwise","reverseCoordinates","inflateEnds","startOrientation","prevEndIndex","orientation","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredSegmentDistance","douglasPeuckerArray","snap","quantize","dx1","dy1","dx2","dy2","anchorX","anchorY","k","ua","navigator","userAgent","devicePixelRatio","WorkerGlobalScope","self","background_","background","LayerProperty","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getZIndex","getOpacity","getVisible","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","getData","isVisible","getMapInternal","find","layerExtent","prepareFrame","MAP","arrayLayerState","createRenderer","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","CanvasTileLayerRenderer","CanvasLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","getLayer","tileState","getTile","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","ReprojTile","tileOrigin","getOrigin","tileSize","toSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","loadedTileCallback","tiles","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","toTransformString","useContainer","inversePixelTransform","tempTransform","containerReused","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alphaChanged","globalAlpha","drawImage","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","_len","_key","newParsingContext","variables","featureId","encoded","typeHint","parser","parsers","parseCallExpression","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","Color","Id","Band","Palette","createParser","_ref","getTypeFromHint","withArgsCount","_ref2","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","JSON","stringify","interpolationType","interpolation","input","stop","operation","argCount","needleType","colors","parsedColors","minArgs","maxArgs","plural","range","argType","expression","gotType","expectedType","sameType","returnType","_len2","argValidators","_key2","actualType","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","op","compileLogicalExpression","compileComparisonExpression","atan","compileNumericExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setScale","setRotateWithView","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","anchorOrigin","optionalIconOrigin","anchorXUnits","optionalIconAnchorUnits","anchorYUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","offsetOrigin","optionalNumber","optionalSize","declutterMode","optionalDeclutterMode","icon","Icon","setDisplacement","setAnchor","buildIcon","pointsName","points","requireNumber","radius","radius1","radius2","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","requireSizeLike","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","RBush","setRenderOrder","renderOrder","createDefaultStyle","toStyleLike","toStyleFunction","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","VectorContext","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","CanvasInstruction","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","defaultFillStyle","strokeStyleColor","defaultStrokeStyle","strokeStyleLineCap","getLineCap","defaultLineCap","strokeStyleLineDash","getLineDash","lineDash","defaultLineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","defaultLineDashOffset","strokeStyleLineJoin","getLineJoin","defaultLineJoin","strokeStyleWidth","lineWidth","defaultLineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","defaultMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","scale_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getRotateWithView","getScaleArray","getDeclutterMode","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoints","beg","keep","saveTextStates_","backgroundFill","backgroundStroke","defaultPadding","p0","p1","p2","p3","repeat","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","font","defaultTextAlign","defaultTextBaseline","fillKey","baseline","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","defaultFont","registerFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","reduce","widths","heights","lineWidths","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","drawImageOrLabel","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","transformSetFromArray","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","rotateWithView","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","Executor","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","imageData","idx","executor","builderTypes","userTransform","context_","transform_","transformRotation_","toFixed","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getTolerance","renderFeature","imageState","unlistenImageChange","listenImageChange","renderGeometry","renderFeatureInternal","getGeometries","getHitDetectionRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","makeScale","transformToString","PRERENDER","POSTRENDER","clipped","transforms","styleFunction","CanvasImmediateRenderer","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","getImageSize","imgContext","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","userExtent","loadFeatures","toUserResolution","getTransformFromProjections","getSquaredRenderTolerance","dirty","getFeaturesInExtent","replayGroupInstructions","ExecutorGroup","getOverlaps","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","toRadians","angleInDegrees","decimals","object","code_","code","units_","units","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","Projection","cosh","PROJECTIONS","fromEPSG4326","dimension","toEPSG4326","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","cloneTransform","identityTransform","addProjection","addProj","addTransformFunc","projectionLike","pointResolution","getter","projUnits","vertices","addEquivalentProjections","projections","addProjections","defaultCode","fromLonLat","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransformFunc","transformExtent","destProjection","sourceMetersPerUnit","userMetersPerUnit","projections2","forwardTransform","inverseTransform","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","addCommon","measureFont","measureContext","textHeights","referenceFonts","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","curr","baseStyle","currentWidth","currentHeight","labelOrImage","executeLabelInstructions","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","forEachLoadedTile","loadImage","pixelContext","pixelContext_","err","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","renderEdges","drawSingle","pixelRound","globalCompositeOperation","sourceDataExtent","stitchContext","canvasWidthInUnits","canvasHeightInUnits","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","Triangulation","sourceRange","srcX","srcY","reproject_","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","_this$entries_$key","getKeyZXY","LRUCache","pruneExceptNewestZ","fromKey","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","extentFromProjection","resolutionsFromExtent","TileGrid","createForExtent","createForProjection","DEFAULT_MAX_ZOOM","half","TileSource","Source","attributionsCollapsible","opaque_","opaque","tilePixelRatio_","tileCache","TileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","scaleSize","getTileCoordForTileUrlFunction","withinExtentAndZ","refresh","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tileCoordHash","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","expandUrl","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","TileImage","xyzOptions","gridOptions","createXYZ","XYZ","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","setAttributions","attributionLike","maxEntries","rbush_","RBush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","rbush","interpolatePoint","cumulativeLengths","RenderFeature","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","properties_","stride_","simplifiedGeometry_","linearRingssCenter","midpoint","enableSimplifyTransformed","withCredentials","xhr","format","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","featureChangeKeys","removed","setLoader","CircleStyle","displacement","getRadius","getDisplacement","radius_","color_","taintedTestContext","IconImage","imageState_","size_","tainted_","initializeImage_","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","HTMLImageElement","calculateScale","wantedWidth","wantedHeight","ImageStyle","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","cacheKey","iconImage_","iconImage","getIconImage","offset_","offsetOrigin_","initialOptions_","iconImageSize","IconImageCache","cache_","cacheSize_","maxCacheSize_","maxCacheSize","shared","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","radius2_","stroke_","renderOptions_","getPoints","getRadius2","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","_this$stroke_$getColo","_this$stroke_$getWidt","_this$stroke_$getLine","_this$stroke_$getLine2","_this$stroke_$getLine3","_this$stroke_$getMite","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometryFunction_","defaultGeometryFunction","hitDetectionRenderer_","zIndex_","_geometry","_this$getRenderer","setRenderer","setHitDetectionRenderer","toFunction","defaultStyles","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","create","setFromArray","transform1","transform2","compose","det","transformStringDiv","transformString","uidCounter_","ol_uid"],"sourceRoot":""}